Hereâ€™s a simple and clear explanation of the **basics of Pandas and NumPy**, two of the most important Python libraries for data analysis.

---

## ðŸŸ© **NumPy (Numerical Python)**

### ðŸ”¹ What is NumPy?

NumPy provides support for large, multi-dimensional arrays and matrices, along with a collection of mathematical functions.

---

### âœ… **NumPy Basics**

```python
import numpy as np

# Create a 1D array
arr = np.array([1, 2, 3])
print("1D Array:", arr)

# Create a 2D array
arr2d = np.array([[1, 2], [3, 4]])
print("2D Array:\n", arr2d)

# Array of zeros
print(np.zeros((2, 3)))

# Array of ones
print(np.ones((2, 2)))

# Range of numbers
print(np.arange(0, 10, 2))  # 0 to 9 with step 2

# Mathematical operations
print("Sum:", arr.sum())
print("Mean:", arr.mean())
print("Max:", arr.max())
```

---

## ðŸŸ¨ **Pandas (Python Data Analysis Library)**

### ðŸ”¹ What is Pandas?

Pandas is used for data manipulation and analysis. It provides two main data structures:

* **Series** (1D)
* **DataFrame** (2D table)

---

### âœ… **Pandas Basics**

```python
import pandas as pd

# Create a Series
s = pd.Series([10, 20, 30])
print("Series:\n", s)

# Create a DataFrame
data = {
    'Name': ['Alice', 'Bob', 'Charlie'],
    'Age': [25, 30, 35]
}
df = pd.DataFrame(data)
print("\nDataFrame:\n", df)

# Access columns
print("\nNames:", df['Name'])

# Describe the data
print("\nSummary:\n", df.describe())

# Filter data
print("\nFiltered Rows:\n", df[df['Age'] > 28])
```

---

### ðŸ“‚ Reading and Writing CSV

```python
# Read from a CSV file
# df = pd.read_csv('data.csv')

# Write to a CSV file
# df.to_csv('output.csv', index=False)
```

